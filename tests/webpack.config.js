const HtmlWebpackPlugin = require('html-webpack-plugin');

module.exports = {
  target: 'web',
  mode: 'development',
  devtool: 'eval',
  entry: [
    require.resolve('./lib/browser.js'),
  ],
  module: {
    rules: [
      {
        // to prevent WebPack from failing to bundle because of 'import.meta.url'
        // generated by Emscripten (on some versions....not all :/)
        test: /\.js$/,
        loader: require.resolve('@open-wc/webpack-import-meta-loader'),
      },
      // WASM files will be copied to output.path and a reference url
      // will be used for modules that require them
      // "options.publicPath" prepend the name of the file
      {
        test: /\.wasm$/,
        type: 'javascript/auto',
        loader: require.resolve('file-loader'),
        options: {
          publicPath: '/',
        },
      },
    ],
  },
  node: {
    fs: 'empty'
  },
  plugins: [
    new HtmlWebpackPlugin({
      template: require.resolve('./public/index.html'),
    }),
  ],
  resolve: {
    extensions: ['.js', '.json'],
    alias: {
      // we just ask Webpack to replace @greycat/core-napi to @greycat/core-wasm
      // because we are running in a browser and we then need WebAssembly to run C code.
      // However, if you want to use GreyCat in Electron, this step can be ommited, as
      // @greycat/core-napi will work in Electron
      '@greycat/core-napi': '@greycat/core-wasm',
      '@greycat-enterprise/core-napi': '@greycat-enterprise/core-wasm',
    },
  }
};
