// ============== STORES ==============
Graph::configureStore(0, '0_store.db');
Graph::configureStore(1, '1_store.db');
// ====================================

// =========== INDEXES ===========
var providers: Reference | null = null;
var labels: Reference | null = null;
var datatypes: Reference | null = null;

{ // do not pollute context scope
  var root = Graph::root();

  // providers
  if (root.providers == null) {
    providers = Graph::newNode(Map {});
    root.providers = providers;
  } else {
    providers = root.providers;
  }
  // labels
  if (root.labels == null) {
    labels = Graph::newNode(Map {});
    root.labels = labels;
  } else {
    labels = root.labels;
  }
  // datatypes
  if (root.datatypes == null) {
    datatypes = Graph::newNode(Map {});
    root.datatypes = datatypes;
  } else {
    datatypes = root.datatypes;
  }
}
// ===============================



// =========== MODEL ============
type Provider {
  id: String;
  containers: Map; // DataContainer
}

type DataContainer {
  id: String;
  content: Map; // Data
  format: Map; // Reference

  provider: Ref<Provider>;
}

// DataFormat = (de)serializer
type DataFormat {
  id: String;

  datatypes: Ref<Map>; // DataType
}

// DataType = TÂ°C | Wh | m3
type DataType {
  id: String;
}

type Data {
  id: String;
  value: Any;
  labels: Map; // Reference
  meta: Map;
  
  container: Ref<DataContainer>;
  datatype: Ref<DataType>;
}

type Label {
  id: String;
  data: Map; // Reference
  subs: Map; // Reference

  parent: Ref<Label>;
}