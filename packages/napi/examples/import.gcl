include 'types.gcl';

// =========== MAIN ============
var minTime = -1L;
var maxTime = -1L;

// init providers
var rnProvider = Graph::newNode(Provider { id: 'rennes-metro', containers: Map {} });
providers->set(rnProvider->id, rnProvider);

// init dataformats
// var whFormat = DataFormat { id: 'Wh' };
// var tempFormat = DataFormat { id: 'temperature' };

// =========== UTILS ===========
function loadData(provider: Reference /*Provider*/, name: String, filepath: String) {
  var container: Reference /*DataContainer*/ | null = provider->containers.get(name);
  if (container == null) {
    // aucun container pour ce lieu => create
    container = Graph::newNode(DataContainer { id: name, provider: provider, content: Map {} });
    // register container on provider
    provider->containers.set(container->id, container);
  }

  Console::println("loadData('${provider->id}', '${name}', '${filepath}')");

  // import data from CSV
  var fp = File::open(filepath, sep: ',');
  fp.foreach((row: Array, index: u64) {
    var city = row[0];
    var insee = row[1];
    var sensorId = row[2];
    // var sensorName = row[3];
    // var timestamp = row[5];
    // var category = row[6];
    // var dataType = row[7];
    // var subType = row[8];
    // var value = row[9];
    // var unit = row[10];
  });
}
// ============================

Console::println('Hang tight, loading data...');
loadData(rnProvider, 'autre-lieu', './data/OED-AutreLieu-2018.csv');
// loadData(rnProvider, 'cosec', './data/OED-Cosec-2018.csv');
// loadData(rnProvider, 'gantelles', './data/OED-Gantelles-2018.csv');
// loadData(rnProvider, 'piscine', './data/OED-Piscine-2018.csv');

Console::println('Data loaded successfully');
Console::println("Min time = ${Time::new(minTime).toLocale()}");
Console::println("Max time = ${Time::new(maxTime).toLocale()}");
// =============================
